# Generated by Django 4.2.4 on 2023-08-20 15:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('isDriver', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=50)),
                ('locationObj', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('species', models.CharField(max_length=50)),
                ('breeds', models.CharField(blank=True, max_length=200, null=True)),
                ('colors', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(choices=[('', ''), ('Female', 'Female'), ('Male', 'Male')], default='', max_length=25)),
                ('size', models.CharField(choices=[('', ''), ('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large'), ('Extra-Large', 'Giant')], default='', max_length=25)),
                ('coat', models.CharField(blank=True, max_length=200, null=True)),
                ('attributes', models.JSONField(blank=True, null=True)),
                ('environment', models.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('photos', models.URLField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spayed_neutered', models.BooleanField(default=False, null=True)),
                ('house_trained', models.BooleanField(default=False, null=True)),
                ('declawed', models.BooleanField(default=False, null=True)),
                ('special_needs', models.BooleanField(default=False, null=True)),
                ('shots_current', models.BooleanField(default=False, null=True)),
                ('mixed', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('children', models.BooleanField(default=False, null=True)),
                ('dogs', models.BooleanField(default=False, null=True)),
                ('cats', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.JSONField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('mission_statement', models.TextField(blank=True, null=True)),
                ('social_media', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_address', models.JSONField(blank=True, null=True)),
                ('destination_address', models.JSONField(blank=True, null=True)),
                ('date', models.DateField(null=True)),
                ('created_date', models.DateField(auto_now=True)),
                ('time', models.CharField(choices=[('', ''), ('MORNING', 'MORNING'), ('AFTERNOON', 'AFTERNOON'), ('EVENING', 'EVENING'), ('FLEXIBLE', 'FLEXIBLE')], default='', max_length=25)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.animal')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('pinterest', models.URLField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='paws_server.transportrequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.animal')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Hours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.CharField(blank=True, max_length=100, null=True)),
                ('tuesday', models.CharField(blank=True, max_length=100, null=True)),
                ('wednesday', models.CharField(blank=True, max_length=100, null=True)),
                ('thursday', models.CharField(blank=True, max_length=100, null=True)),
                ('friday', models.CharField(blank=True, max_length=100, null=True)),
                ('saturday', models.CharField(blank=True, max_length=100, null=True)),
                ('sunday', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.organization')),
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paws_server.organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
